name: build and test

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2

    - name: Download LLVM/Clang compiled deps
      run: mkdir ${{runner.temp}}/llvm; cd ${{runner.temp}}/llvm; wget https://github.com/riftEmber/spfie-deps/releases/download/11.0.0/clang+llvm-11.0.0-eh.tgz; tar xzvf clang+llvm-11.0.0-eh.tgz

    - name: Download LLVM src
      uses: actions/checkout@v2
      with:
        repository: llvm/llvm-project
        ref: llvmorg-11.0.0
        path: llvm-project

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Setup LLVM Clang components
      run: mv $GITHUB_WORKSPACE/llvm-project/llvm ${{runner.temp}}/llvm; mv $GITHUB_WORKSPACE/llvm-project/clang ${{runner.temp}}/llvm

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLLVM_SRC=${{runner.temp}}/llvm

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target test
